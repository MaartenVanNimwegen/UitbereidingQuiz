<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="CloseBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>